
package fractalzoomer.gui;

import fractalzoomer.main.MainWindow;
import fractalzoomer.main.app_settings.PaletteSettings;
import fractalzoomer.main.app_settings.Settings;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

/**
 *
 * @author kaloch
 */
public class OutColoringPaletteMenu extends MyMenu {
    private static final long serialVersionUID = -6910413474874305L;
    private MainWindow ptr;
    private PaletteMenu palette_menu;
    private JMenu roll_palette_menu;
    private JMenuItem roll_palette;
    private JMenuItem increase_roll_palette;
    private JMenuItem decrease_roll_palette;
    private JMenuItem color_intensity_opt;

    private JMenuItem generated_palette_opt;
    private ColorTransferMenu color_transfer_menu;
    
    public OutColoringPaletteMenu(MainWindow ptr2, String name, PaletteSettings ps, boolean smoothing, int temp_color_cycling_location) {
        super(name);

        this.ptr = ptr2;
        
        setIcon(MainWindow.getIcon("palette_outcoloring.png"));
        
        palette_menu = new PaletteMenu(ptr, "Palette", ps.color_choice, smoothing, ps.custom_palette, ps.color_interpolation, ps.color_space, ps.reversed_palette, ps.color_cycling_location, ps.scale_factor_palette_val, ps.processing_alg, true, temp_color_cycling_location);
        
        roll_palette_menu = new MyMenu("Palette Shifting");
        roll_palette_menu.setIcon(MainWindow.getIcon("shift_palette.png"));
        
        roll_palette = new MyMenuItem("Shift Palette", MainWindow.getIcon("shift_palette.png"));

        increase_roll_palette = new MyMenuItem("Shift Palette Forward", MainWindow.getIcon("plus.png"));

        decrease_roll_palette = new MyMenuItem("Shift Palette Backward", MainWindow.getIcon("minus.png"));
        
        color_transfer_menu = new ColorTransferMenu(ptr, "Transfer Functions", ps.transfer_function, true);
        
        color_intensity_opt = new MyMenuItem("Color Intensity", MainWindow.getIcon("color_intensity.png"));

        generated_palette_opt = new MyMenuItem("Generated Palette", MainWindow.getIcon("palette.png"));
        
        roll_palette.setToolTipText("Shifts the chosen palette by a number.");
        increase_roll_palette.setToolTipText("Shifts the chosen palette forward by one.");
        decrease_roll_palette.setToolTipText("Shifts the chosen palette backward by one.");
        
        color_intensity_opt.setToolTipText("Changes the color intensity of the out-coloring palette.");
        generated_palette_opt.setToolTipText("Uses palette generated by formulas.");

        generated_palette_opt.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_G, ActionEvent.SHIFT_MASK | ActionEvent.CTRL_MASK));
        roll_palette.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_H, ActionEvent.SHIFT_MASK));
        increase_roll_palette.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_EQUALS, ActionEvent.SHIFT_MASK));
        decrease_roll_palette.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_MINUS, ActionEvent.SHIFT_MASK));
        color_intensity_opt.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_5, ActionEvent.CTRL_MASK));
        
        roll_palette.addActionListener(e -> ptr.shiftPalette(true));

        increase_roll_palette.addActionListener(e -> ptr.shiftPaletteForward(true));

        decrease_roll_palette.addActionListener(e -> ptr.shiftPaletteBackward(true));
        
        
        color_intensity_opt.addActionListener(e -> ptr.setColorIntensity(true));

        generated_palette_opt.addActionListener(e -> ptr.setGeneratedPalette(true));
        
        roll_palette_menu.add(roll_palette);
        roll_palette_menu.add(increase_roll_palette);
        roll_palette_menu.add(decrease_roll_palette);
        
        add(palette_menu);
        add(generated_palette_opt);
        add(roll_palette_menu);
        addSeparator();
        add(color_transfer_menu);    
        addSeparator();
        add(color_intensity_opt);
        
    }
    
    public JRadioButtonMenuItem[] getPalette() {
        
        return palette_menu.getPalette();
        
    }
    
    public JMenu getRollPaletteMenu() {
        
        return roll_palette_menu;
        
    }
    
    public PaletteMenu getPaletteMenu() {
        
        return palette_menu;
        
    }
    
    public JRadioButtonMenuItem[] getOutColoringTranferFunctions() {
        
        return color_transfer_menu.getTranferFunctions();
        
    }

    public JMenuItem getGeneratedPaletteOpt() {
        return generated_palette_opt;
    }

    public void updateIcons(Settings s) {

        if(s.gps.useGeneratedPaletteOutColoring || s.gps.blendNormalPaletteWithGeneratedPaletteOutColoring) {
            generated_palette_opt.setIcon(MainWindow.getIcon("palette_enabled.png"));
        }
        else {
            generated_palette_opt.setIcon(MainWindow.getIcon("palette.png"));
        }

    }

}
